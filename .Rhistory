library("combinat")
# Load original AM dataframes
load("data-raw/am_7 and am_16.RData")
# Permute AM dataframes row-wise
am_7_permuted <- am_7[sample(nrow(am_7)),]
am_16_permuted <- am_16[sample(nrow(am_16)),]
# Save permuted AM dataframes
save(am_7_permuted, am_16_permuted, "data-raw/am_7_and_am_16_permuted.RData")
save(am_7_permuted, am_16_permuted, file="data-raw/am_7_and_am_16_permuted.RData")
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_7_and_am_16_permuted.RData")
View(am_16_permuted)
# Load original AM dataframes from a single file
load("data-raw/am_7 and am_16.RData")
# Permute AM dataframes row-wise
am_7_permuted <- am_7[sample(nrow(am_7)),]
am_16_permuted <- am_16[sample(nrow(am_16)),]
# Save permuted AM dataframes in a single file
save(am_7_permuted, am_16_permuted, file="data-raw/am_7_and_am_16_permuted.RData")
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_7_and_am_16_permuted.RData")
# Load original AM dataframes from a single file
load("data-raw/am_7 and am_16.RData")
# Permute AM dataframes row-wise
am_7_permuted <- am_7[sample(nrow(am_7)),]
am_16_permuted <- am_16[sample(nrow(am_16)),]
# Save permuted AM dataframes in a single file
save(am_7_permuted, am_16_permuted, file="data-raw/am_7 and am_16.RData")
library(covidhm)
library(ggplot2)
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
library(ggplot2)
library(covidhm)
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Load original AM dataframes from a single file
load("data-raw/am_list.RData")
# Load original AM dataframes from a single file
load("data-raw/am_list_original.RData")
# Load original AM dataframes from a single file
load("data-raw/am_list_original.RData")
# Permute AM dataframes row-wise
am_list_permuted <- am_list[sample(nrow(am_list)),]
View(am_list)
# Permute AM dataframes row-wise
# AM total shuffling
am_list_all_permuted <- am_list[[1]][sample(nrow(am_list[[1]])),]
# Save permuted AM dataframes in a single file
save(am_list_all_permuted, file="data-raw/am_list.RData")
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_list.RData")
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_list.RData")
View(am_list_all_permuted)
library(covidhm)
load("data-raw/am_list.RData")
# Load original AM dataframes from a single file
load("data-raw/am_list_original.RData")
# Permute AM dataframes row-wise
# AM total shuffling
am_list <- am_list[[1]][sample(nrow(am_list[[1]])),]
# Save permuted AM dataframes in a single file
save(am_list_all_permuted, file="data-raw/am_list.RData")
# Save permuted AM dataframes in a single file
save(am_list, file="data-raw/am_list.RData")
m <- am_list[[1]]
load("data-raw/am_list.RData")
m <- am_list[[1]]
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_list_original.RData")
View(am_list)
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_7 and am_16_original.RData")
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_list_original.RData")
View(am_list)
# Load original AM dataframes from a single file
load("data-raw/am_list_original.RData")
All <- am_list[[1]][sample(nrow(am_list[[1]])),]
Thurs <- am_list[[2]][sample(nrow(am_list[[2]])),]
Fri <- am_list[[3]][sample(nrow(am_list[[3]])),]
Sat <- am_list[[4]][sample(nrow(am_list[[4]])),]
am_list = list(All, Thurs, Fri, Sat)
# Load original AM dataframes from a single file
load("data-raw/am_list_original.RData")
All <- am_list[[1]][sample(nrow(am_list[[1]])),]
Thurs <- am_list[[2]][sample(nrow(am_list[[2]])),]
Fri <- am_list[[3]][sample(nrow(am_list[[3]])),]
Sat <- am_list[[4]][sample(nrow(am_list[[4]])),]
am_list = list(All, Thurs, Fri, Sat)
# Save permuted AM dataframes in a single file
save(am_list, file="data-raw/am_list.RData")
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_list.RData")
View(am_list)
View(am_list)
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_list_original.RData")
View(am_list)
# Load original AM dataframes from a single file
load("data-raw/am_list_original.RData")
All <- am_list[[1]][sample(nrow(am_list[[1]])),]
Thurs <- am_list[[2]][sample(nrow(am_list[[2]])),]
Fri <- am_list[[3]][sample(nrow(am_list[[3]])),]
Sat <- am_list[[4]][sample(nrow(am_list[[4]])),]
am_list = list(All, Thurs, Fri, Sat)
View(am_list)
names(am_list) = c("All", "Thurs", "Fri", "Sat")
View(am_list)
# Save permuted AM dataframes in a single file
save(am_list, file="data-raw/am_list.RData")
load("~/Repositories/Lab_Repositories/s21_sys_bio/haselmere_topo_n_dyn/topology_gp/covid_hm/data-raw/am_list.RData")
View(am_list)
load("data-raw/am_list.RData")
m <- am_list[[1]]
View(m)
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
load("data-raw/am_list_original.RData")
m <- am_list[[1]]
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
res <- scenario_sim(net = m, n.sim = 10, num.initial.cases = 1,prop.asym=0.4,
prop.ascertain = 0.9, cap_max_days = 70,
delay_shape = 1, delay_scale = 1.4, R = 0.8, presymrate = 0.2, scenario = "nothing",
testing = FALSE, outside = 0.001, distancing = 0)
# Plot of raw cumulative cases
ggplot(data=res, aes(x=week, y=cumcases,col = sim)) +
geom_line(show.legend = FALSE, alpha=0.6, aes(group = sim)) +
scale_y_continuous(name="Weekly number of cases") +
theme_bw()
